var primes = [
    2,
    3,
    5,
    7,
    11,
    13,
    17,
    19,
    23,
    29,
    31,
    37,
    41,
    43,
    47,
    53,
    59,
    61,
    67,
    71,
    73,
    79,
    83,
    89,
    97
];

var indexOfSearchedNumber = function(searchedNumber) {
   return this.primes.indexOf(searchedNumber);
}

//1. Let min = 0 and max = n-1.
//2. If max < min, then stop: target is not present in //array. Return -1.
//3. Compute guess as the average of max and min, rounded //down (so that it is an integer).
//4. If array[guess] equals target, then stop. You found //it! Return guess.
//5. If the guess was too low, that is, array[guess] < //target, then set min = guess + 1.
//6. Otherwise, the guess was too high. Set max = guess - //1.
//7. Go back to step 2.
var binarySearchPrimes = function(array, numberToBeFound) {
    var min = 0,
        max = array.length - 1,
        guess;
    
    if(max < min) {
        return -1;
    }
    
    while(max >= min) {
        guess = Math.floor((min + max)/2);
    
        if(array[guess] === numberToBeFound) {            
            return guess;
        } else if(array[guess] < numberToBeFound) {
            min = guess + 1;               
        } else if(array[guess] > numberToBeFound) {
            max = guess -1;            
        }
    }    
}

//console.log(binarySearchPrimes(primes, 67));

var stringComparator = function(string1, string2) {
    for(var i = 0; i < (string1.length + string2.length); i++) {
        
    }
}
var binarySearchName = function(namesArray, nameToBeFound) {
    //the array must be sorted in order for binary search to work
    namesArray.sort();
    console.log(namesArray)
    
    var min = 0,
        max = namesArray.length - 1,
        middleOfArray;                  
        
    while (max >= min) {
        middleOfArray = Math.floor((min + max)/2);
        
        if(namesArray[middleOfArray] === nameToBeFound) {            
            return middleOfArray;
        } else if (namesArray[middleOfArray] < nameToBeFound) {
            min = middleOfArray + 1;
        } else {
            max = middleOfArray - 1;
        }

    }
    
    return -1;
}

console.log(binarySearchName(['Cristian', 'Flavius', 'Dragos', 'Csaba', 'Robert', 'Dan Vatca', 'Dan Ardelean'], 'Dan Ardelean'));